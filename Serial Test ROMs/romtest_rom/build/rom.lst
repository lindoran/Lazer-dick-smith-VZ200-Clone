                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module rom
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _putc
                                     12 	.globl _testc
                                     13 	.globl _entmon
                                     14 	.globl _puts
                                     15 	.globl _puthex8
                                     16 	.globl _puthex16
                                     17 ;--------------------------------------------------------
                                     18 ; special function registers
                                     19 ;--------------------------------------------------------
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area _DATA
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _INITIALIZED
                                     28 ;--------------------------------------------------------
                                     29 ; absolute external ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _DABS (ABS)
                                     32 ;--------------------------------------------------------
                                     33 ; global & static initialisations
                                     34 ;--------------------------------------------------------
                                     35 	.area _HOME
                                     36 	.area _GSINIT
                                     37 	.area _GSFINAL
                                     38 	.area _GSINIT
                                     39 ;--------------------------------------------------------
                                     40 ; Home
                                     41 ;--------------------------------------------------------
                                     42 	.area _HOME
                                     43 	.area _HOME
                                     44 ;--------------------------------------------------------
                                     45 ; code
                                     46 ;--------------------------------------------------------
                                     47 	.area _CODE
                                     48 ;src/rom.c:4: void putc(char c) __naked {
                                     49 ;	---------------------------------
                                     50 ; Function putc
                                     51 ; ---------------------------------
      000000                         52 _putc::
                                     53 ;src/rom.c:9: __endasm;
      000000 CD AD 0F         [17]   54 	call	0x0FAD ; ROM PUTC
      000003 C9               [10]   55 	ret
                                     56 ;src/rom.c:10: }
                                     57 ;src/rom.c:13: char testc() __naked {
                                     58 ;	---------------------------------
                                     59 ; Function testc
                                     60 ; ---------------------------------
      000004                         61 _testc::
                                     62 ;src/rom.c:17: __endasm;
      000004 CD A5 0F         [17]   63 	call	0x0FA5 ; ROM TESTC
      000007 C9               [10]   64 	ret
                                     65 ;src/rom.c:19: }
                                     66 ;src/rom.c:22: void entmon()  {
                                     67 ;	---------------------------------
                                     68 ; Function entmon
                                     69 ; ---------------------------------
      000008                         70 _entmon::
                                     71 ;src/rom.c:25: __endasm;
      000008 C3 E7 00         [10]   72 	jp	0x00E7 ; ROM ENTMON
                                     73 ;src/rom.c:26: }
      00000B C9               [10]   74 	ret
                                     75 ;src/rom.c:31: void puts(const char* s) {
                                     76 ;	---------------------------------
                                     77 ; Function puts
                                     78 ; ---------------------------------
      00000C                         79 _puts::
                                     80 ;src/rom.c:32: while (*s) {
      00000C                         81 00103$:
      00000C 7E               [ 7]   82 	ld	a, (hl)
      00000D B7               [ 4]   83 	or	a, a
      00000E C8               [11]   84 	ret	Z
                                     85 ;src/rom.c:33: if (*s == '\n') putc('\r');
      00000F D6 0A            [ 7]   86 	sub	a, #0x0a
      000011 20 07            [12]   87 	jr	NZ, 00102$
      000013 E5               [11]   88 	push	hl
      000014 3E 0D            [ 7]   89 	ld	a, #0x0d
      000016 CDr00r00         [17]   90 	call	_putc
      000019 E1               [10]   91 	pop	hl
      00001A                         92 00102$:
                                     93 ;src/rom.c:34: putc(*s++);
      00001A 4E               [ 7]   94 	ld	c, (hl)
      00001B 23               [ 6]   95 	inc	hl
      00001C E5               [11]   96 	push	hl
      00001D 79               [ 4]   97 	ld	a, c
      00001E CDr00r00         [17]   98 	call	_putc
      000021 E1               [10]   99 	pop	hl
                                    100 ;src/rom.c:36: }
      000022 18 E8            [12]  101 	jr	00103$
                                    102 ;src/rom.c:39: void puthex8(unsigned char val) {
                                    103 ;	---------------------------------
                                    104 ; Function puthex8
                                    105 ; ---------------------------------
      000024                        106 _puthex8::
      000024 5F               [ 4]  107 	ld	e, a
                                    108 ;src/rom.c:40: const char* hex = "0123456789ABCDEF";
      000025 01r4Ar00         [10]  109 	ld	bc, #___str_0+0
                                    110 ;src/rom.c:41: putc(hex[(val >> 4) & 0x0F]);
      000028 7B               [ 4]  111 	ld	a, e
      000029 07               [ 4]  112 	rlca
      00002A 07               [ 4]  113 	rlca
      00002B 07               [ 4]  114 	rlca
      00002C 07               [ 4]  115 	rlca
                                    116 ;	spillPairReg hl
                                    117 ;	spillPairReg hl
                                    118 ;	spillPairReg hl
                                    119 ;	spillPairReg hl
      00002D E6 0F            [ 7]  120 	and	a, #0xf
      00002F 6F               [ 4]  121 	ld	l, a
                                    122 ;	spillPairReg hl
                                    123 ;	spillPairReg hl
      000030 26 00            [ 7]  124 	ld	h, #0x00
                                    125 ;	spillPairReg hl
                                    126 ;	spillPairReg hl
      000032 09               [11]  127 	add	hl, bc
      000033 56               [ 7]  128 	ld	d, (hl)
      000034 C5               [11]  129 	push	bc
      000035 D5               [11]  130 	push	de
      000036 7A               [ 4]  131 	ld	a, d
      000037 CDr00r00         [17]  132 	call	_putc
      00003A D1               [10]  133 	pop	de
      00003B C1               [10]  134 	pop	bc
                                    135 ;src/rom.c:42: putc(hex[val & 0x0F]);
      00003C 16 00            [ 7]  136 	ld	d, #0x00
      00003E 7B               [ 4]  137 	ld	a, e
      00003F E6 0F            [ 7]  138 	and	a, #0x0f
      000041 6F               [ 4]  139 	ld	l, a
                                    140 ;	spillPairReg hl
                                    141 ;	spillPairReg hl
      000042 26 00            [ 7]  142 	ld	h, #0x00
                                    143 ;	spillPairReg hl
                                    144 ;	spillPairReg hl
      000044 09               [11]  145 	add	hl, bc
      000045 4E               [ 7]  146 	ld	c, (hl)
      000046 79               [ 4]  147 	ld	a, c
                                    148 ;src/rom.c:43: }
      000047 C3r00r00         [10]  149 	jp	_putc
      00004A                        150 ___str_0:
      00004A 30 31 32 33 34 35 36   151 	.ascii "0123456789ABCDEF"
             37 38 39 41 42 43 44
             45 46
      00005A 00                     152 	.db 0x00
                                    153 ;src/rom.c:47: void puthex16(unsigned int val) {
                                    154 ;	---------------------------------
                                    155 ; Function puthex16
                                    156 ; ---------------------------------
      00005B                        157 _puthex16::
                                    158 ;src/rom.c:48: puthex8((val >> 8) & 0xFF);
      00005B 4C               [ 4]  159 	ld	c, h
      00005C E5               [11]  160 	push	hl
      00005D 79               [ 4]  161 	ld	a, c
      00005E CDr24r00         [17]  162 	call	_puthex8
      000061 E1               [10]  163 	pop	hl
                                    164 ;src/rom.c:49: puthex8(val & 0xFF);
      000062 7D               [ 4]  165 	ld	a, l
                                    166 ;src/rom.c:50: }
      000063 C3r24r00         [10]  167 	jp	_puthex8
                                    168 	.area _CODE
                                    169 	.area _INITIALIZER
                                    170 	.area _CABS (ABS)
